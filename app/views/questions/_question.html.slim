.full-question id="question-#{question.id}"
  h2.page-title style="text-align: center" = question.title
  h3.lead= question.body
  p.small Attachments:
  div
    - question.attachments.each do |a|
      .attachment id="attachment-#{a.id}"
        = render 'attachments/attachment', a: a, attachable: question
  .question-rating
    = render 'votes/vote', votable: question
  ul.list-unstyled.list-inline
    - if can?(:update, question)
      li= link_to 'Edit question','', class: 'edit-question-link', data: {question_id: question.id}
      li= form_for question, remote: true, html: { id: "edit-question-#{question.id}"} do |f|
        p= f.label :title, "Title"
        p= f.text_field :title, size: '80'
        p= f.label :body, "Question"
        .edit-question-errors-form
        p= f.text_area :body, cols: '80', rows: '10'
        p= f.submit 'Save Question'
    - if can?(:destroy, question)
      li= link_to 'Delete question', question, method: :delete, class: 'text-warning'
    li.subscription
      - if user_signed_in?
        - if current_user.subscriptions.find_by(question: question)
          = link_to 'Unsubscribe', subscription_path(current_user.subscriptions.find_by(question: question)), method: :delete, remote: true, class: 'text-warning unsubscribe-link'
          = link_to 'Subscribe', question_subscriptions_path(question), method: :post, remote: true, data: {type: :json}, class: 'subscribe-link', style: "display: none"
        - else
          = link_to 'Subscribe', question_subscriptions_path(question), method: :post, remote: true, data: {type: :json}, class: 'subscribe-link'
          = link_to 'Unsubscribe', '#', method: :delete, remote: true, class: 'text-warning unsubscribe-link', style: "display: none"
  .comments
    p.small Comments:
    div class="comments-question-#{question.id}"
      = render question.comments
  .new-comment
    = render 'comments/form', commentable: question if can?(:create, Comment)
